// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketsLayer.DAL.Context;

#nullable disable

namespace TicketsLayer.DAL.Migrations
{
    [DbContext(typeof(TicketContext))]
    [Migration("20230316135408_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketsLayer.DAL.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("TicketsLayer.DAL.Models.Dev_Tickets", b =>
                {
                    b.Property<int>("Ticket_id")
                        .HasColumnType("int");

                    b.Property<int>("Dev_id")
                        .HasColumnType("int");

                    b.HasKey("Ticket_id", "Dev_id");

                    b.HasIndex("Dev_id");

                    b.ToTable("Dev_Tickets");
                });

            modelBuilder.Entity("TicketsLayer.DAL.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dept_ID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dept_ID");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("Your_Project_Name.Models.Domain.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dept_id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Dept_id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketsLayer.DAL.Models.Dev_Tickets", b =>
                {
                    b.HasOne("TicketsLayer.DAL.Models.Developer", "Developer")
                        .WithMany("Tickets")
                        .HasForeignKey("Dev_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Your_Project_Name.Models.Domain.Ticket", "Ticket")
                        .WithMany("Developers")
                        .HasForeignKey("Ticket_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TicketsLayer.DAL.Models.Developer", b =>
                {
                    b.HasOne("TicketsLayer.DAL.Models.Department", "Department")
                        .WithMany("Developers")
                        .HasForeignKey("Dept_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Your_Project_Name.Models.Domain.Ticket", b =>
                {
                    b.HasOne("TicketsLayer.DAL.Models.Department", "Department")
                        .WithMany("Tickets")
                        .HasForeignKey("Dept_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TicketsLayer.DAL.Models.Department", b =>
                {
                    b.Navigation("Developers");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TicketsLayer.DAL.Models.Developer", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Your_Project_Name.Models.Domain.Ticket", b =>
                {
                    b.Navigation("Developers");
                });
#pragma warning restore 612, 618
        }
    }
}
