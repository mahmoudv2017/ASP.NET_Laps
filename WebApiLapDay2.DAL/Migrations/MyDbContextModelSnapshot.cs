// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiLapDay2.DAL.Context;

#nullable disable

namespace WebApiLapDay2.DAL.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.Property<int>("DevelopersId")
                        .HasColumnType("int");

                    b.Property<int>("TicketsId")
                        .HasColumnType("int");

                    b.HasKey("DevelopersId", "TicketsId");

                    b.HasIndex("TicketsId");

                    b.ToTable("DeveloperTicket");
                });

            modelBuilder.Entity("WebApiLapDay2.DAL.Models.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Automotive & Baby"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Beauty & Health"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electronics"
                        });
                });

            modelBuilder.Entity("WebApiLapDay2.DAL.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentsID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentsID");

                    b.ToTable("Developer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentsID = 2,
                            Name = "Diabetes"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentsID = 2,
                            Name = "Hypertension"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentsID = 2,
                            Name = "Asthma"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentsID = 1,
                            Name = "Depression"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentsID = 1,
                            Name = "Arthritis"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentsID = 3,
                            Name = "Allergy"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentsID = 3,
                            Name = "Flu"
                        });
                });

            modelBuilder.Entity("WebApiLapDay2.DAL.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EstimationCost")
                        .HasColumnType("float");

                    b.Property<int?>("Severity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            Id = 20,
                            Description = "Harum hic impedit dolore voluptate placeat.",
                            EstimationCost = 0.0,
                            Severity = 1,
                            Title = "in"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Rerum totam est quo possimus sunt sunt ad.",
                            EstimationCost = 0.0,
                            Severity = 0,
                            Title = "id"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Id cumque explicabo beatae.",
                            EstimationCost = 0.0,
                            Severity = 1,
                            Title = "dicta"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Consectetur beatae dolorem voluptates occaecati.",
                            EstimationCost = 0.0,
                            Severity = 0,
                            Title = "eius"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Nulla est doloribus ut non aspernatur vero dolores.",
                            EstimationCost = 0.0,
                            Severity = 2,
                            Title = "assumenda"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Et praesentium est ipsum eligendi rerum itaque voluptate quia.",
                            EstimationCost = 0.0,
                            Severity = 1,
                            Title = "ex"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Optio non debitis ut molestiae dolorem ad.",
                            EstimationCost = 0.0,
                            Severity = 2,
                            Title = "velit"
                        });
                });

            modelBuilder.Entity("DeveloperTicket", b =>
                {
                    b.HasOne("WebApiLapDay2.DAL.Models.Developer", null)
                        .WithMany()
                        .HasForeignKey("DevelopersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiLapDay2.DAL.Models.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiLapDay2.DAL.Models.Developer", b =>
                {
                    b.HasOne("WebApiLapDay2.DAL.Models.Departments", "Departments")
                        .WithMany("developers")
                        .HasForeignKey("DepartmentsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("WebApiLapDay2.DAL.Models.Departments", b =>
                {
                    b.Navigation("developers");
                });
#pragma warning restore 612, 618
        }
    }
}
